// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pardakht.UserManagement.Infrastructure.SqlRepository;

namespace Pardakht.UserManagement.Infrastructure.SqlRepository.Migrations.ParadakhtUserManagementDb
{
    [DbContext(typeof(ParadakhtUserManagementDbContext))]
    [Migration("20210513101528_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int>("ActiveTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdleTime")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LogonTime")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformGuid")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TenantPlatformMapGuid")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlatformGuid");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantPlatformMapGuid", "PlatformGuid");

                    b.HasIndex("Type", "TypeId", "ActionType", "PlatformGuid", "TenantPlatformMapGuid");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsRestricted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PermissionGroupId")
                        .HasColumnType("int");

                    b.Property<string>("PlatformGuid")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("PermissionGroupId");

                    b.HasIndex("PlatformGuid");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.PermissionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PlatformGuid")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("PermissionGroups");
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JwtKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PlatformGuid")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFixed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PlatformGuid")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RoleHolderTypeId")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("PlatformGuid");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.StaffUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountId")
                        .HasColumnType("varchar(225)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ParentAccountId")
                        .HasColumnType("varchar(225)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ParentAccountId");

                    b.HasIndex("TenantId");

                    b.ToTable("StaffUsers");
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.UserPlatform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlatformGuid")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("StaffUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffUserId", "PlatformGuid")
                        .IsUnique();

                    b.ToTable("UserPlatforms");
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.UserPlatformRole", b =>
                {
                    b.Property<int>("UserPlatformId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserPlatformId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserPlatformRoles");
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.UserSuspension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSuspensions");
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.AuditLog", b =>
                {
                    b.HasOne("Pardakht.UserManagement.Shared.Models.Infrastructure.StaffUser", "StaffUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.Permission", b =>
                {
                    b.HasOne("Pardakht.UserManagement.Shared.Models.Infrastructure.PermissionGroup", "PermissionGroup")
                        .WithMany("Permissions")
                        .HasForeignKey("PermissionGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.RolePermission", b =>
                {
                    b.HasOne("Pardakht.UserManagement.Shared.Models.Infrastructure.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pardakht.UserManagement.Shared.Models.Infrastructure.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.UserPlatform", b =>
                {
                    b.HasOne("Pardakht.UserManagement.Shared.Models.Infrastructure.StaffUser", "StaffUser")
                        .WithMany("UserPlatforms")
                        .HasForeignKey("StaffUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.UserPlatformRole", b =>
                {
                    b.HasOne("Pardakht.UserManagement.Shared.Models.Infrastructure.Role", "Role")
                        .WithMany("UserPlatformRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pardakht.UserManagement.Shared.Models.Infrastructure.UserPlatform", "UserPlatform")
                        .WithMany("UserPlatformRoles")
                        .HasForeignKey("UserPlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pardakht.UserManagement.Shared.Models.Infrastructure.UserSuspension", b =>
                {
                    b.HasOne("Pardakht.UserManagement.Shared.Models.Infrastructure.StaffUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pardakht.UserManagement.Shared.Models.Infrastructure.StaffUser", "StaffUser")
                        .WithMany("UserSuspensions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
