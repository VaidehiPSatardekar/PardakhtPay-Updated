// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pardakht.PardakhtPay.SqlRepository;

namespace Pardakht.PardakhtPay.SqlRepository.Migrations
{
    [DbContext(typeof(PardakhtPayDbContext))]
    [Migration("20210513213026_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.ApplicationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationSettings");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.AutoTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CardToCardAccountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RequestGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("TransferFromAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransferRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransferToAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransferredDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AutoTransfers");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.BankStatementItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CheckNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ConfirmedTransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("WithdrawalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountGuid")
                        .HasName("IX_BankStatementItem_AccountGuid");

                    b.HasIndex("AccountGuid", "TransactionDateTime")
                        .HasName("IX_BankStatement_AccountGuidTransactionDate");

                    b.ToTable("BankStatementItems");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.BlockedCardNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BlockedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("InsertUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.ToTable("BlockedCardNumbers");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.BlockedPhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BlockedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasName("UIX_BlockedPhoneNumber_PhoneNumber")
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.ToTable("BlockedPhoneNumbers");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.CardHolderName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountContext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallbackUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CardNumber")
                        .HasName("IX_CardHolderName_CardNumber");

                    b.HasIndex("RecordId")
                        .HasName("UIX_CardHolderName_RecordId");

                    b.ToTable("CardHolderNames");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.CardToCardAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferThresholdActive")
                        .HasColumnType("bit");

                    b.Property<string>("LoginGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoginType")
                        .HasColumnType("int");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SafeAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SwitchCreditDailyLimit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("SwitchIfHasReserveAccount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("SwitchLimitAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("SwitchOnLimit")
                        .HasColumnType("bit");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TransferThreshold")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TransferThresholdLimit")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CardNumber")
                        .IsUnique()
                        .HasName("UIX_CardToCardAccount_CardNumber")
                        .HasFilter("[CardNumber] IS NOT NULL");

                    b.ToTable("CardToCardAccounts");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.CardToCardAccountGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CardToCardAccountGroups");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.CardToCardAccountGroupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowCardToCard")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowWithdrawal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BlockedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CardToCardAccountGroupId")
                        .HasColumnType("int");

                    b.Property<int>("CardToCardAccountId")
                        .HasColumnType("int");

                    b.Property<bool>("HideCardNumber")
                        .HasColumnType("bit");

                    b.Property<int>("LoginType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PausedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TempGroupItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CardToCardAccountGroupItems");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.CardToCardUserSegmentRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CardToCardAccountGroupItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserSegmentGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CardToCardUserSegmentRelations");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.DeviceMerchantCustomerRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("TenantGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DeviceMerchantCustomerRelations");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.IZMobileDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExternalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IZMobileDevices");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.InvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MerchantId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.InvoiceOwnerSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoicePeriod")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<decimal>("PardakhtPalDepositRate")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("PardakhtPalWithdrawalRate")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("PardakhtPayDepositRate")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WithdrawalRate")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceOwnerSettings");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.InvoicePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.ToTable("InvoicePayments");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.ManualTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountGuid")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CancellerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CardToCardAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedTransferDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iban")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ImmediateTransfer")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("ToAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransferAccountId")
                        .HasColumnType("int");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<bool>("TransferWholeAmount")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdaterId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManualTransfers");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.ManualTransferDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("BankStatementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManualTransferId")
                        .HasColumnType("int");

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransferGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransferId")
                        .HasColumnType("int");

                    b.Property<string>("TransferNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransferRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransferStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ManualTransferDetails");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.ManualTransferSourceCardDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CardToCardAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManualTransferId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ManualTransferSourceCardDetails");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.Merchant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowPartialPaymentForWithdrawals")
                        .HasColumnType("bit");

                    b.Property<string>("ApiKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CardToCardAccountGroupId")
                        .HasColumnType("int");

                    b.Property<string>("DomainAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MinimumTransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MobileTransferAccountGroupId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("UseCardtoCardPaymentForWithdrawal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApiKey")
                        .IsUnique()
                        .HasName("UIX_Merchant_ApiKey")
                        .HasFilter("[ApiKey] IS NOT NULL");

                    b.HasIndex("Title")
                        .IsUnique()
                        .HasName("UIX_MerchantTitle");

                    b.ToTable("Merchants");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.MerchantCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivityScore")
                        .HasColumnType("int");

                    b.Property<string>("CardNumberRelatedCustomers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CardToCardAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConfirmCodeValidationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConfirmDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConfirmedPhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepositNumber")
                        .HasColumnType("int");

                    b.Property<string>("DeviceRelatedCustomers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DifferentCardNumberCount")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HamrahCardTryCount")
                        .HasColumnType("int");

                    b.Property<string>("HamrahCardVerifiedPhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHamrahCardPhoneVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<int>("MerchantId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("PardakhtPayDepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PardakhtPayDepositCount")
                        .HasColumnType("int");

                    b.Property<decimal>("PardakhtPayWithdrawalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PardakhtPayWithdrawalCount")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNumberRelatedCustomers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SmsVerificationTryCount")
                        .HasColumnType("int");

                    b.Property<int>("SmsVerificationType")
                        .HasColumnType("int");

                    b.Property<string>("TenantGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TotalDeposit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalWithdraw")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserCasinoNumber")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("UserSegmentGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("UserSportbookNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("UserTotalCasino")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UserTotalSportbook")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("WebsiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("WithdrawNumber")
                        .HasColumnType("int");

                    b.Property<int?>("WithdrawalAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MerchantCustomers");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.MobileCardAccountUserSegmentRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MobileTransferCardAccountGroupItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserSegmentGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MobileCardAccountUserSegmentRelations");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.MobileTransferCardAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardToCardAccountGuid")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MerchantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantPassword")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentProviderType")
                        .HasColumnType("int");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminalId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long>("ThresholdAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MobileTransferCardAccounts");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.MobileTransferCardAccountGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MobileTransferCardAccountGroups");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.MobileTransferCardAccountGroupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("MobileTransferCardAccountGroupItems");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.MobileTransferDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExternalId")
                        .HasColumnType("int");

                    b.Property<string>("ExternalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastBlockDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VerifyCodeSendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MobileTransferDevices");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.MydigiDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExternalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MydigiDevices");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.OwnerBankLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("BankLoginGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankLoginId")
                        .HasColumnType("int");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastPasswordChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginRequestId")
                        .HasColumnType("int");

                    b.Property<int>("LoginType")
                        .HasColumnType("int");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OwnerBankLogins");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.OwnerSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<bool>("WaitAmountForCurrentWithdrawal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("OwnerGuid")
                        .IsUnique()
                        .HasName("UIX_OwnerSettingGuid")
                        .HasFilter("[OwnerGuid] IS NOT NULL");

                    b.ToTable("OwnerSettings");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.Payment780Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExternalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MerchantCustomerId")
                        .HasName("IX_Payment780DeviceMerchantCustomerId");

                    b.HasIndex("PhoneNumber")
                        .HasName("IX_Payment780DevicePhoneNumber");

                    b.ToTable("Payment780Devices");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.RiskyKeyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("RiskyKeywords");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.SadadPspDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExternalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SadadPspDevices");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.SekehDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExternalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SekehDevices");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.SesDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExternalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SesDevices");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.TenantApi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApiUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPaymentUrl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsServiceUrl")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantId")
                        .HasColumnType("int");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TenantsApis");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("ApiType")
                        .HasColumnType("int");

                    b.Property<string>("BankNumber")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("CardHolderName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("CardToCardAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCardNumber")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ExternalId")
                        .HasColumnType("int");

                    b.Property<string>("ExternalMessage")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ExternalReference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("HideCardNumber")
                        .HasColumnType("bit");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsMaliciousCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneNumberBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LoginGuid")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<int?>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<int>("MerchantId")
                        .HasColumnType("int");

                    b.Property<string>("MobileDeviceNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MobileTransferAccountId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<int>("PaymentType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("ProcessDurationInMiliseconds")
                        .HasColumnType("int");

                    b.Property<int?>("ProxyPaymentAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ReturnUrl")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenantGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("TransferredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserSegmentGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("WithdrawalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantGuid")
                        .HasName("IX_Transaction_TenantGuid");

                    b.HasIndex("Token")
                        .IsUnique()
                        .HasName("UIX_Transaction_Token");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.TransactionQueryHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("RequestContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TransactionQueryHistories");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.TransactionRequestContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RequestContent")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransactionRequestContents");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.TransactionWithdrawalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<int>("WithdrawalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransactionWithdrawalHistories");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.TransactionWithdrawalRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<int>("WithdrawalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WithdrawalId")
                        .IsUnique()
                        .HasName("UIX_TransactionWithdrawalRelation_WithdrawalId");

                    b.ToTable("TransactionWithdrawalRelations");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.TransferAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountHolderFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountHolderLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iban")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransferAccounts");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.UnsupportedBin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApiType")
                        .HasColumnType("int");

                    b.Property<string>("Bin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnsupportedBins");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.UserSegment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserSegmentCompareTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserSegmentGroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserSegmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserSegments");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.UserSegmentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMalicious")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("OwnerGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantGuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserSegmentGroups");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.UserSegmentGroupHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("NewSegmentGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("OldSegmentGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserSegmentGroupHistories");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.Withdrawal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountGuid")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("BankStatementItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("CardToCardTryCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ExpectedTransferDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("FromAccountNumber")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("MerchantCustomerId")
                        .HasColumnType("int");

                    b.Property<int>("MerchantId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ReturnUrl")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("TenantGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("ToAccountNumber")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ToIbanNumber")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TransferAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransferId")
                        .HasColumnType("int");

                    b.Property<string>("TransferNotes")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TransferRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransferRequestGuid")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TransferStatus")
                        .HasColumnType("int");

                    b.Property<string>("TransferStatusDescription")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<int>("WithdrawalProcessType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("WithdrawalStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Withdrawals");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.WithdrawalQueryHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WithdrawalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WithdrawalQueryHistories");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.WithdrawalRequestContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RequestContent")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("WithdrawalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WithdrawalRequestContents");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.WithdrawalTransferHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastCheckDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransferId")
                        .HasColumnType("int");

                    b.Property<string>("TransferNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransferStatus")
                        .HasColumnType("int");

                    b.Property<string>("TransferStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WithdrawalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WithdrawalTransferHistories");
                });

            modelBuilder.Entity("Pardakht.PardakhtPay.Shared.Models.Entities.MobileTransferCardAccountGroupItem", b =>
                {
                    b.HasOne("Pardakht.PardakhtPay.Shared.Models.Entities.MobileTransferCardAccount", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
